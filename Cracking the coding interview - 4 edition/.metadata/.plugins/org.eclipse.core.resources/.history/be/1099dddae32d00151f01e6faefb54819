package chapter1;

public class Three_RemoveDuplicateChars {
	
	// Time Complexity - n^2
	public static String removeDupChars(String input){
		
		if(input == null){
			System.out.println("Input is null.");
			return null;
		}
		else if(input.length() == 0){
			System.out.println("Input is an empty String.");
			return "";
		}
		
		int strLen = input.length();
		char[] cArr = new char[strLen];
		for(int i = 0; i < strLen; i++){
			cArr[i] = input.charAt(i);
		}
		
		for(int i = 0; i < strLen; i++){
			for(int j = (i+1); j < strLen; j++){
				if(cArr[i]==cArr[j]){
					cArr[j] = 0;
				}
			}
		}
		String reversedString = new String(cArr);
		System.out.println(reversedString.replace(0, ));
		return reversedString;
	}
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 removeDupChars("abcaadbcd");
	}

}
