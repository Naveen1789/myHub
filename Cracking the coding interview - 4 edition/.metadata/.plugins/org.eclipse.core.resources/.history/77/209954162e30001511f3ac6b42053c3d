package otherSimpleAlgorithms;

public class Stacks<T extends Object > {
	
	int capacity;
	int size;
	Item<T> top;
	
	public boolean push(T t){
		if(size < capacity){
			Item<T> i = new Item<T>(t);
			i.next = top;
			top = i;
			
			return true;
		}
		else {
			return false;
		}
	}
	
	public void display(){
		
		Item<T> curItem = this.top;
		int i = 0;
		while(i < (size-1)){
			System.out.print(curItem.info + "\t");
		}
		System.out.println();
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Stacks<String> stkOfStrings = new Stacks<String>();
		stkOfStrings.push("a");
		stkOfStrings.push("c");
		stkOfStrings.push("e");
		
		stkOfStrings.display();
	}

}

// ==================================================================================== //

class Item <T extends Object >{
	T info;
	Item<T> next;
	
	Item(T i){
		this.info = i;
		this.next = null;
	}
}
